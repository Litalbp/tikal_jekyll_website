<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>com.mindcite</groupId>
		<artifactId>mindcite-parent</artifactId>
		<version>1.0-SNAPSHOT</version>
	</parent>

	<groupId>com.mindcite</groupId>
	<version>1.0-SNAPSHOT</version>
	<artifactId>mindcite-xciter-web</artifactId>

	<packaging>war</packaging>

	<name>MindCite :: XCiter Web App</name>

	<dependencies>

 		<dependency>
			<groupId>com.mindcite</groupId>
			<version>1.0-SNAPSHOT</version>
			<artifactId>mindcite-citer-services</artifactId>
		</dependency>

 		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-user</artifactId>
		</dependency>

		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-servlet</artifactId>
		</dependency>
 
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
        </dependency>
 
		<dependency>
			<groupId>com.extjs</groupId>
			<artifactId>gxt</artifactId>
		</dependency>
		<dependency>
			<groupId>net.sf.json-lib</groupId>
			<artifactId>json-lib</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-oxm</artifactId>
		</dependency>		
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
		</dependency>
<!-- 
		<dependency>
			<groupId>spring4gwt</groupId>
			<artifactId>spring4gwt</artifactId>
			<version>0.0.1</version>
		</dependency>
 -->		
		<dependency>
			<groupId>com.thoughtworks.xstream</groupId>
			<artifactId>com.springsource.com.thoughtworks.xstream</artifactId>
		</dependency>
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>com.springsource.org.codehaus.jackson.mapper</artifactId>
		</dependency>
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>com.springsource.org.codehaus.jackson</artifactId>
		</dependency>

		<dependency>
			<groupId>gdurelle</groupId>
			<artifactId>tagcloud</artifactId>
		</dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>
        
	</dependencies>

	<build>
		<sourceDirectory>src</sourceDirectory>
		<outputDirectory>war/WEB-INF/classes</outputDirectory>
		<finalName>${pom.artifactId}-${pom.version}</finalName>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<configuration>
					<encoding>UTF8</encoding>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
				<configuration>
					<filesets>
						<fileset>
							<directory>war/WEB-INF/lib</directory>
							<includes>
								<include>*.jar</include>
							</includes>
							<followSymlinks>false</followSymlinks>
						</fileset>
					</filesets>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>clean</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>war/WEB-INF/lib</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
                <version>2.1-alpha-2</version>
				<configuration>
					<warSourceDirectory>war</warSourceDirectory>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<configuration>
					<wtpversion>2.0</wtpversion>
					<testOutputDirectory>target/test-classes</testOutputDirectory>
					<useProjectReferences>false</useProjectReferences>
					
					<classpathContainers>
						<classpathContainer>org.eclipse.jdt.launching.JRE_CONTAINER</classpathContainer>
						<classpathContainer>com.google.gwt.eclipse.core.GWT_CONTAINER</classpathContainer>
					</classpathContainers>

					<buildcommands>
						<buildcommand>org.eclipse.jdt.core.javabuilder</buildcommand>
						<buildcommand>com.google.gdt.eclipse.core.webAppProjectValidator</buildcommand>
						<buildCommand>
							<name>org.eclipse.ajdt.core.ajbuilder</name>
							<arguments>
								<aspectPath>org.springframework.aspects</aspectPath>
							</arguments>
						</buildCommand>
						<buildCommand>
							<name>org.springframework.ide.eclipse.core.springbuilder</name>
						</buildCommand>
					</buildcommands>
					<additionalProjectnatures>
						<projectnature>org.eclipse.jdt.core.javanature</projectnature>
						<projectnature>com.google.gdt.eclipse.core.webAppNature</projectnature>
						<projectnature>org.springframework.ide.eclipse.core.springnature</projectnature>
					</additionalProjectnatures>
				</configuration>
			</plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>gwt-maven-plugin</artifactId>
                <version>1.2</version>
                <configuration>
                    <logLevel>INFO</logLevel>

                    <!-- This must point to your GWT modules! -->
                    <compileTargets>
                        <value>com.mindcite.xciter.XCiter</value>
                    </compileTargets>

                    <!-- This is for generating Asynch interfaces -->
                    <servicePattern>**/client/**/*Controller.java</servicePattern>
					<failOnError>true</failOnError>
					
                    <extraJvmArgs>-Xmx512m</extraJvmArgs>
                    <!--<jvm>${JAVA_HOME}/bin/java</jvm>-->
                    <!--<noServer>false</noServer>-->

                    <runTarget>/XCiter.html</runTarget>
                    <style>DETAILED</style>
                    <webXml>war/WEB-INF/web.xml</webXml>
                    <!--
                        this parameter is VERY important with automatic
                        mode - has to match the version in your declared
                        deps
                    -->
                    <!--
                        if this is set incorrect (not a match), or left
                        out (default is 1.5.2 for 2.0-beta23) you will
                        have mysterious errors
                    -->
                    <gwtVersion>${gwt.version}</gwtVersion>
                    <inline>true</inline>
                </configuration>
                <executions>
					<execution>
						<id>generateAsynch</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>generateAsync</goal> 
						</goals> 
					</execution>
                   	<execution>
                        <phase>compile</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

	<properties>
        <downloadSources>true</downloadSources>
        <gwt.style>DETAILED</gwt.style>
	</properties>

    <profiles>
        <!--
            We can configure our integration server to activate this
            profile and perform gae:deploy, thus uploading latest
            snapshot to the
            http://1.latest.<applicationName>.appspot.com automatically
        -->
        <profile>
            <id>integration-build</id>
            <properties>
                <!-- Produce pretty JS during GWT compilation for test environment -->
                <gwt.style>PRETTY</gwt.style>
            </properties>
        </profile>

        <!--
            This profile will activate automatically during release and
            upload application to the
            http://2.latest.<applicationName>.appspot.com (We might want
            to set the 2nd version as our applications Default version
            to be accessible at http://<applicationName>.appspot.com)
        -->
        <profile>
            <id>release-build</id>
            <activation>
                <property>
                    <name>performRelease</name>
                    <value>true</value>
                </property>
            </activation>
            <properties>
                <!--
                    Produce compressed JS during GWT compilation for
                    production environment
                -->
                <gwt.style>OBFUSCATED</gwt.style>
            </properties>
        </profile>
    </profiles>

</project>
